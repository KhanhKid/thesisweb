<?php
/**
 * Part of the Fuel framework.
 *
 * @package    Fuel
 * @version    1.8
 * @author     Fuel Development Team
 * @license    MIT License
 * @copyright  2010 - 2016 Fuel Development Team
 * @link       http://fuelphp.com
 */

return array(

	/**
	 * base_url - The base URL of the application.
	 * MUST contain a trailing slash (/)
	 *
	 * You can set this to a full or relative URL:
	 *
	 *     'base_url' => '/foo/',
	 *     'base_url' => 'http://foo.com/'
	 *
	 * Set this to null to have it automatically detected.
	 */
	// 'base_url'  => null,

	/**
	 * url_suffix - Any suffix that needs to be added to
	 * URL's generated by Fuel. If the suffix is an extension,
	 * make sure to include the dot
	 *
	 *     'url_suffix' => '.html',
	 *
	 * Set this to an empty string if no suffix is used
	 */
	// 'url_suffix'  => '',

	/**
	 * index_file - The name of the main bootstrap file.
	 *
	 * Set this to 'index.php if you don't use URL rewriting
	 */
	// 'index_file' => false,

	// 'profiling'  => false,

	/**
	 * Default location for the file cache
	 */
	// 'cache_dir'       => APPPATH.'cache/',

	/**
	 * Settings for the file finder cache (the Cache class has it's own config!)
	 */
	// 'caching'         => false,
	// 'cache_lifetime'  => 3600, // In Seconds

	/**
	 * Callback to use with ob_start(), set this to 'ob_gzhandler' for gzip encoding of output
	 */
	// 'ob_callback'  => null,

	// 'errors'  => array(
		// Which errors should we show, but continue execution? You can add the following:
		// E_NOTICE, E_WARNING, E_DEPRECATED, E_STRICT to mimic PHP's default behaviour
		// (which is to continue on non-fatal errors). We consider this bad practice.
		// 'continue_on'  => array(),
		// How many errors should we show before we stop showing them? (prevents out-of-memory errors)
		// 'throttle'     => 10,
		// Should notices from Error::notice() be shown?
		// 'notices'      => true,
		// Render previous contents or show it as HTML?
		// 'render_prior' => false,
	// ),

	/**
	 * Localization & internationalization settings
	 */
	// 'language'           => 'en', // Default language
	// 'language_fallback'  => 'en', // Fallback language when file isn't available for default language
	// 'locale'             => 'en_US', // PHP set_locale() setting, null to not set

	/**
	 * Internal string encoding charset
	 */
	// 'encoding'  => 'UTF-8',

	/**
	 * DateTime settings
	 *
	 * server_gmt_offset	in seconds the server offset from gmt timestamp when time() is used
	 * default_timezone		optional, if you want to change the server's default timezone
	 */
	// 'server_gmt_offset'  => 0,
	// 'default_timezone'   => null,

	/**
	 * Logging Threshold.  Can be set to any of the following:
	 *
	 * Fuel::L_NONE
	 * Fuel::L_ERROR
	 * Fuel::L_WARNING
	 * Fuel::L_DEBUG
	 * Fuel::L_INFO
	 * Fuel::L_ALL
	 */
	// 'log_threshold'    => Fuel::L_WARNING,
	// 'log_path'         => APPPATH.'logs/',
	// 'log_date_format'  => 'Y-m-d H:i:s',

	/**
	 * Security settings
	 */
	'security' => array(
		// 'csrf_autoload'            => false,
		// 'csrf_autoload_methods'    => array('post', 'put', 'delete'),
		// 'csrf_bad_request_on_fail' => false,
		// 'csrf_auto_token'          => false,
		// 'csrf_token_key'           => 'fuel_csrf_token',
		// 'csrf_expiration'          => 0,

		/**
		 * A salt to make sure the generated security tokens are not predictable
		 */
		// 'token_salt'            => 'put your salt value here to make the token more secure',

		/**
		 * Allow the Input class to use X headers when present
		 *
		 * Examples of these are HTTP_X_FORWARDED_FOR and HTTP_X_FORWARDED_PROTO, which
		 * can be faked which could have security implications
		 */
		// 'allow_x_headers'       => false,

		/**
		 * This input filter can be any normal PHP function as well as 'xss_clean'
		 *
		 * WARNING: Using xss_clean will cause a performance hit.
		 * How much is dependant on how much input data there is.
		 */
		'uri_filter'       => array('htmlentities'),

		/**
		 * This input filter can be any normal PHP function as well as 'xss_clean'
		 *
		 * WARNING: Using xss_clean will cause a performance hit.
		 * How much is dependant on how much input data there is.
		 */
		// 'input_filter'  => array(),

		/**
		 * This output filter can be any normal PHP function as well as 'xss_clean'
		 *
		 * WARNING: Using xss_clean will cause a performance hit.
		 * How much is dependant on how much input data there is.
		 */
		'output_filter'  => array('Security::htmlentities'),

		/**
		 * Encoding mechanism to use on htmlentities()
		 */
		// 'htmlentities_flags' => ENT_QUOTES,

		/**
		 * Whether to encode HTML entities as well
		 */
		// 'htmlentities_double_encode' => false,

		/**
		 * Whether to automatically filter view data
		 */
		// 'auto_filter_output'  => true,

		/**
		 * With output encoding switched on all objects passed will be converted to strings or
		 * throw exceptions unless they are instances of the classes in this array.
		 */
		'whitelisted_classes' => array(
			'Fuel\\Core\\Presenter',
			'Fuel\\Core\\Response',
			'Fuel\\Core\\View',
			'Fuel\\Core\\ViewModel',
			'Closure',
		),
	),

	/**
	 * Cookie settings
	 */
	// 'cookie' => array(
		// Number of seconds before the cookie expires
		// 'expiration'  => 0,
		// Restrict the path that the cookie is available to
		// 'path'        => '/',
		// Restrict the domain that the cookie is available to
		// 'domain'      => null,
		// Only transmit cookies over secure connections
		// 'secure'      => false,
		// Only transmit cookies over HTTP, disabling Javascript access
		// 'http_only'   => false,
	// ),

	/**
	 * Validation settings
	 */
	// 'validation' => array(
		/**
		 * Whether to fallback to global when a value is not found in the input array.
		 */
		// 'global_input_fallback' => true,
	// ),

	/**
	 * Controller class prefix
	 */
	 // 'controller_prefix' => 'Controller_',

	/**
	 * Routing settings
	 */
	// 'routing' => array(
		/**
		 * Whether URI routing is case sensitive or not
		 */
		// 'case_sensitive' => true,

		/**
		 *  Whether to strip the extension
		 */
		// 'strip_extension' => true,
	// ),

	/**
	 * To enable you to split up your application into modules which can be
	 * routed by the first uri segment you have to define their basepaths
	 * here. By default empty, but to use them you can add something
	 * like this:
	 *      array(APPPATH.'modules'.DS)
	 *
	 * Paths MUST end with a directory separator (the DS constant)!
	 */
	'module_paths' => array(
		APPPATH.'modules'.DS,
	),

	/**
	 * To enable you to split up your additions to the framework, packages are
	 * used. You can define the basepaths for your packages here. By default
	 * empty, but to use them you can add something like this:
	 *      array(APPPATH.'modules'.DS)
	 *
	 * Paths MUST end with a directory separator (the DS constant)!
	 */
	'package_paths' => array(
		PKGPATH,
	),

	/**************************************************************************/
	/* Always Load                                                            */
	/**************************************************************************/
	'always_load'  => array(

		/**
		 * These packages are loaded on Fuel's startup.
		 * You can specify them in the following manner:
		 *
		 * array('auth'); // This will assume the packages are in PKGPATH
		 *
		 * // Use this format to specify the path to the package explicitly
		 * array(
		 *     array('auth'	=> PKGPATH.'auth/')
		 * );
		 */
		'packages'  => array(
			'orm','auth','email'
		),

		/**
		 * These modules are always loaded on Fuel's startup. You can specify them
		 * in the following manner:
		 *
		 * array('module_name');
		 *
		 * A path must be set in module_paths for this to work.
		 */
		'modules'  => array('wsroot','frontend'),

		/**
		 * Classes to autoload & initialize even when not used
		 */
		// 'classes'  => array(),

		/**
		 * Configs to autoload
		 *
		 * Examples: if you want to load 'session' config into a group 'session' you only have to
		 * add 'session'. If you want to add it to another group (example: 'auth') you have to
		 * add it like 'session' => 'auth'.
		 * If you don't want the config in a group use null as groupname.
		 */
		// 'config'  => array(),

		/**
		 * Language files to autoload
		 *
		 * Examples: if you want to load 'validation' lang into a group 'validation' you only have to
		 * add 'validation'. If you want to add it to another group (example: 'forms') you have to
		 * add it like 'validation' => 'forms'.
		 * If you don't want the lang in a group use null as groupname.
		 */
		// 'language'  => array(),

	),
	/**
	Common field
	**/

	'CATEGORY' => array(
		"S" => "FOOTBALL",
		"T" => "TENNIS",
		"R" => "TRACK&FIELD",
		"M" => "MULTI"
	),
	'CLOTH_TYPE' => array(
		1 => array(
			'name' => '軽衣料', // LIGHT
			'subType' => array(
				1 => array(
					'name' => 'トップス', //TOPS
					'attrColor' => array('a1'=>'A', 'b1' => 'B','c1' => 'C', 'd1' => 'D', 'e1' => 'E', 'f1' => 'F'),
					/*'sizeAdult' => array('','S', 'M', 'L', 'O', 'XO'),
					'sizeChildren' => array('120', '130', '140', '150', '160'),*/
					'logoColor' => array('a1'=>'A', 'b1' => 'B')
				),
				2 => array(
					'name' => 'ボトムス', // BOTTOMS
					'attrColor' => array('a2' => 'A', 'b2' => 'B', 'c2' => 'C', 'd2' => 'D', 'e2' => 'E', 'f2' => 'F'),
					/*'sizeAdult' => array('','S', 'M', 'L', 'O', 'XO'),
					'sizeChildren' => array('120', '130', '140', '150', '160'),*/
					'logoColor' => array('a2'=>'A', 'b2' => 'B')
				),
				3 => array(
					'name' => 'ソックス',// SOCKS
					'attrColor' => array('a3' => 'A', 'b3' => 'B', 'c3' => 'C', 'd3' => 'D', 'e3' => 'E', 'f3' => 'F'),
					/*'sizeAdult' => array('25-27', '', '', '', '',''),
					'sizeChildren' => array('21-24', '', '', '', ''),*/
					'logoColor' => array('a3'=>'A', 'b3' => 'B')
				)
			)
		),
		2 => array(
			'name' => '重衣料', // HEAVY
			'subType' => array(
				1 => array(
					'name' => 'トップス', //TOPS
					'attrColor' => array('a1'=>'A', 'b1' => 'B','c1' => 'C', 'd1' => 'D', 'e1' => 'E'),
					/*'sizeAdult' => array('','S', 'M', 'L', 'O', 'XO'),
					'sizeChildren' => array('120', '130', '140', '150', '160'),*/
					'logoColor' => array('a1'=>'A', '')
				),
				2 => array(
					'name' => 'ロングパンツ', //LONG PANTS
					'attrColor' => array('a2' => 'A', 'b2' => 'B', 'c2' => 'C','',''),
					/*'sizeAdult' => array('SS','S', 'M', 'L', 'O', 'XO'),
					'sizeChildren' => array('120', '130', '140', '150', '160'),*/
					'logoColor' => array('a2'=>'A', '')
				),
				3 => array(
					'name' => 'ハーフパンツ',//HALF PANTS
					'attrColor' => array('a3' => 'A', 'b3' => 'B', '','',''),
					/*'sizeAdult' => array('SS','S', 'M', 'L', 'O', 'XO'),
					'sizeChildren' => array('120', '130', '140', '150', '160'),*/
					'logoColor' => array('a3'=>'A', '')
				),
			)
		)

	),
	'ERROR_NOTI' => array(
		'is_required' => ': 入力してください。',
		'choose_required' => ': 選択してください。',
		'wrong_format' => ': 正しく入力してください。',
		'zenkaku' => ': 全角ひらがなで入力してください。',
		'furigana' => ': 全角ひらがなで入力してください。',
		'email_format' => ': メールアドレス形式で入力してください。',
		'hankaku' => ': 半角で入力してください。',
		'hankakueisu' => ': 半角英数記で入力してください。',
		'hankakusuji' => ': 半角数字で入力してください。',
		'furigana' => ': 全角ひらがなで入力してください。',
		'katakana' => ': 全角カタカナで入力してください。',
		'phone_number' => '電話番号形式で入力してください。',
		'existed' => ': すでに存在しています。',
		'max_digit' => '文字未満で入力してください。',
        'post_code' => ': 郵便番号形式で入力してください。',
	),
	'FACTORY_ORDER_STATUS' => array(
		1 => '工場発注前', // not send order yet
		2 => '工場発注済' // ordered
	),
	'OFFICE' => array(
		1 => '京都',
		2 => '東京'
	),'PREF' => array(
			'1'  => '北海道',
			'2'  => '青森県',
			'3'  => '岩手県',
			'4'  => '宮城県',
			'5'  => '秋田県',
			'6'  => '山形県',
			'7'  => '福島県',
			'8'  => '茨城県',
			'9'  => '栃木県',
			'10' => '群馬県',
			'11' => '埼玉県',
			'12' => '千葉県',
			'13' => '東京都',
			'14' => '神奈川県',
			'15' => '新潟県',
			'16' => '富山県',
			'17' => '石川県',
			'18' => '福井県',
			'19' => '山梨県',
			'20' => '長野県',
			'21' => '岐阜県',
			'22' => '静岡県',
			'23' => '愛知県',
			'24' => '三重県',
			'25' => '滋賀県',
			'26' => '京都府',
			'27' => '大阪府',
			'28' => '兵庫県',
			'29' => '奈良県',
			'30' => '和歌山県',
			'31' => '鳥取県',
			'32' => '島根県',
			'33' => '岡山県',
			'34' => '広島県',
			'35' => '山口県',
			'36' => '徳島県',
			'37' => '香川県',
			'38' => '愛媛県',
			'39' => '高知県',
			'40' => '福岡県',
			'41' => '佐賀県',
			'42' => '長崎県',
			'43' => '熊本県',
			'44' => '大分県',
			'45' => '宮崎県',
			'46' => '鹿児島県',
			'47' => '沖縄県',
		)

);